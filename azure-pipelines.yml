trigger:
- master

jobs:
- job: Assemble
  timeoutInMinutes: 10
  variables:
    pythonDependencies: "sphinx==1.8 guzzle_sphinx_theme javalang"
  strategy:
    matrix:
      Linux:
        imageName: ubuntu-latest
        openJdkUrl: https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/
        jdkName: openjdk-14.0.1_linux-x64_bin.tar.gz
        javaHome: $(Build.BinariesDirectory)/java/jdk-14.0.1
        gradleWrapper: gradlew
      Mac:
        imageName: macos-latest
        openJdkUrl: https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/
        jdkName: openjdk-14.0.1_osx-x64_bin.tar.gz
        javaHome: $(Build.BinariesDirectory)/java/jdk-14.0.1.jdk/Contents/Home/
        gradleWrapper: gradlew
      Windows:
        imageName: windows-latest
        openJdkUrl: https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/
        jdkName: openjdk-14.0.1_windows-x64_bin.zip
        javaHome: $(Build.BinariesDirectory)/java/jdk-14.0.1
        gradleWrapper: gradlew.bat

  pool:
    vmImage: $(imageName)

  steps:
  - task: UsePythonVersion@0
    name: GetPython3
    inputs:
      versionSpec: '3.x'
      addToPath: true
      architecture: 'x64'

  - task: UsePythonVersion@0
    name: GetPython2
    inputs:
      versionSpec: '2.x'
      addToPath: false
      architecture: 'x64'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        function standardize_path {
            echo `echo "$1" | tr '\\' '/'`
        }
        
        p2=`standardize_path $(GetPython2.pythonLocation)/python`
        p3=`standardize_path $(GetPython3.pythonLocation)/python`
        echo "Python2 (${p2}) and Python3 (${p3})"
        
        echo "##vso[task.setvariable variable=python2]${p2}"
        echo "##vso[task.setvariable variable=python3]${p3}"

  - task: CmdLine@2
    displayName: Install Python Dependencies
    inputs:
      script: |
        echo "Installing Python 3 dependencies"
        $(python3) -m pip install setuptools wheel
        $(python3) -m pip install $(pythonDependencies)

        echo "Installing Python 2 dependencies"
        $(python2) -m pip install setuptools wheel
        $(python2) -m pip install $(pythonDependencies)

  # Download the JDK
  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: 'curl --silent --remote-name $(openJdkUrl)$(jdkName)'
      workingDirectory: '$(Build.BinariesDirectory)'
    displayName: Download OpenJDK

  - task: ExtractFiles@1
    inputs:
      archiveFilePatterns: |
        $(Build.BinariesDirectory)/*.zip
        $(Build.BinariesDirectory)/*.tar.gz
      destinationFolder: $(Build.BinariesDirectory)/java
      cleanDestinationFolder: true

  - task: Gradle@2
    inputs:
      gradleWrapperFile: ./$(gradleWrapper)
      options: "-POSPREY_PYTHON3=$(python3) -POSPREY_PYTHON2=$(python2) -PAZURE_BUILD_ID=$(Build.BuildId)"
      tasks: 'assemble'
      publishJUnitResults: false
      javaHomeOption: 'Path'
      jdkDirectory: $(javaHome)
      sonarQubeRunAnalysis: false

  - task: CopyFiles@2
    inputs:
      SourceFolder: 'build/distributions'
      Contents: |
        *.zip
      TargetFolder: '$(Build.ArtifactStagingDirectory)'
    displayName: Copy distributions to staging dir

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: $(Agent.OS)
      publishLocation: 'Container'
    displayName: Make staging dir an artifact

- job: CreateRelease
  pool:
    vmImage: ubuntu-latest
  dependsOn: Assemble
  steps:
  # Create a variable
  - bash: |
      version=$(<resources/config/version)
      echo "##vso[task.setvariable variable=version]${version}"
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'specific'
      downloadPath: '$(System.ArtifactsDirectory)'
  - task: GitHubRelease@1
    inputs:
      gitHubConnection: 'github.com_gusennan'
      repositoryName: '$(Build.Repository.Name)'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: '$(version).$(Build.BuildId)'
      assets: '$(System.ArtifactsDirectory)/**/osprey-*python*.zip'
      isDraft: true
      changeLogCompareToRelease: 'lastFullRelease'
      changeLogType: 'commitBased'
      title: '$(version).$(Build.BuildId)'