# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  pythonDependencies: "sphinx==1.8 guzzle_sphinx_theme javalang"

strategy:
  matrix:
    linux:
      imageName: ubuntu-latest
      openJdkUrl: https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/
      jdkName: openjdk-14.0.1_linux-x64_bin.tar.gz
      javaHome: $(Build.BinariesDirectory)/java/jdk-14.0.1
      gradleWrapper: gradlew
      python2Name: python2
      python3Name: python3
    mac:
      imageName: macos-latest
      openJdkUrl: https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/
      jdkName: openjdk-14.0.1_osx-x64_bin.tar.gz
      javaHome: $(Build.BinariesDirectory)/java/jdk-14.0.1.jdk/Contents/Home/
      gradleWrapper: gradlew
      python2Name: python2
      python3Name: python3
    windows:
      imageName: windows-latest
      openJdkUrl: https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/
      jdkName: openjdk-14.0.1_windows-x64_bin.zip
      javaHome: $(Build.BinariesDirectory)/java/jdk-14.0.1
      gradleWrapper: gradlew.bat
      python2Name: 'C:\hostedtoolcache\windows\Python\2.7.18\x64\python'
      python3Name: python

pool:
  vmImage: $(imageName)

steps:

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true
    architecture: 'x64'

- task: CmdLine@2
  displayName: Install Python Dependencies
  inputs:
    script: |
      echo "Installing python 3 dependencies"
      python -m pip install --user setuptools wheel
      python -m pip install --user $(pythonDependencies)

# - task: CmdLine@2
#   displayName: Install Python Dependencies
#   inputs:
#     script: |
#       echo "Installing python 2 dependencies"
#       $(python2Name) -m pip install --user setuptools wheel
#       $(python2Name) -m pip install --user $(pythonDependencies)

#       echo "Installing python 3 dependencies"
#       $(python3Name) -m pip install --user setuptools wheel
#       $(python3Name) -m pip install --user $(pythonDependencies)

# - task: CmdLine@2
#   displayName: Install Python Dependencies
#   inputs:
#     script: |
#       echo "Installing python 2 dependencies"
#       $(python2Name) -m pip install --user setuptools wheel
#       $(python2Name) -m pip install --user $(pythonDependencies)

#       echo "Installing python 3 dependencies"
#       $(python3Name) -m pip install --user setuptools wheel
#       $(python3Name) -m pip install --user $(pythonDependencies)

- task: CmdLine@2
  inputs:
    script: |
      echo Testing sphinx-build
      
      sphinx-build

# Download the JDK
# - task: Bash@3
#   inputs:
#     targetType: 'inline'
#     script: 'curl --silent --remote-name $(openJdkUrl)$(jdkName)'
#     workingDirectory: '$(Build.BinariesDirectory)'
#   displayName: Download OpenJDK

# - task: ExtractFiles@1
#   inputs:
#     archiveFilePatterns: |
#       $(Build.BinariesDirectory)/*.zip
#       $(Build.BinariesDirectory)/*.tar.gz
#     destinationFolder: $(Build.BinariesDirectory)/java
#     cleanDestinationFolder: true

# - task: Gradle@2
#   inputs:
#     gradleWrapperFile: ./$(gradleWrapper)
#     tasks: 'assemble'
#     publishJUnitResults: false
#     javaHomeOption: 'Path'
#     jdkDirectory: $(javaHome)
#     sonarQubeRunAnalysis: false
    