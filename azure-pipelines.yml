# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

variables:
  pythonDependencies: "wheel sphinx==1.8 guzzle_sphinx_theme javalang"

strategy:
  matrix:
    linux:
      imageName: ubuntu-latest
      openJdkUrl: https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/
      jdkName: openjdk-14.0.1_linux-x64_bin.tar.gz
      javaHome: $(Build.BinariesDirectory)/java/jdk-14.0.1
      gradleWrapper: gradlew
      python2Name: python2
      python3Name: python3
    mac:
      imageName: macos-latest
      openJdkUrl: https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/
      jdkName: openjdk-14.0.1_osx-x64_bin.tar.gz
      javaHome: $(Build.BinariesDirectory)/java/jdk-14.0.1.jdk/Contents/Home/
      gradleWrapper: gradlew
      python2Name: python2
      python3Name: python3
    windows:
      imageName: windows-latest
      openJdkUrl: https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/
      jdkName: openjdk-14.0.1_windows-x64_bin.zip
      javaHome: $(Build.BinariesDirectory)/java/jdk-14.0.1
      gradleWrapper: gradlew.bat
      python2Name: python2
      python3Name: python

pool:
  vmImage: $(imageName)

steps:
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      $(python2Name) -m pip install --user setuptools
      $(python3Name) -m pip install --user setuptools
      $(python2Name) -m pip install --user $(pythonDependencies)
      $(python3Name) -m pip install --user $(pythonDependencies)