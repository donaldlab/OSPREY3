trigger:
- master

variables:
  pythonDependencies: "sphinx==1.8 guzzle_sphinx_theme javalang"

strategy:
  matrix:
    linux:
      imageName: ubuntu-latest
      openJdkUrl: https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/
      jdkName: openjdk-14.0.1_linux-x64_bin.tar.gz
      javaHome: $(Build.BinariesDirectory)/java/jdk-14.0.1
      gradleWrapper: gradlew
    mac:
      imageName: macos-latest
      openJdkUrl: https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/
      jdkName: openjdk-14.0.1_osx-x64_bin.tar.gz
      javaHome: $(Build.BinariesDirectory)/java/jdk-14.0.1.jdk/Contents/Home/
      gradleWrapper: gradlew

    windows:
      imageName: windows-latest
      openJdkUrl: https://download.java.net/java/GA/jdk14.0.1/664493ef4a6946b186ff29eb326336a2/7/GPL/
      jdkName: openjdk-14.0.1_windows-x64_bin.zip
      javaHome: $(Build.BinariesDirectory)/java/jdk-14.0.1
      gradleWrapper: gradlew.bat

pool:
  vmImage: $(imageName)

steps:
- task: UsePythonVersion@0
  name: GetPython3
  inputs:
    versionSpec: '3.x'
    addToPath: true
    architecture: 'x64'

- task: UsePythonVersion@0
  name: GetPython2
  inputs:
    versionSpec: '2.x'
    addToPath: false
    architecture: 'x64'

- task: CmdLine@2
  displayName: Install Python Dependencies
  inputs:
    script: |
      echo "Installing Python 3 dependencies"
      $(GetPython3.pythonLocation)/python -m pip install setuptools wheel
      $(GetPython3.pythonLocation)/python -m pip install $(pythonDependencies)

      echo "Installing Python 2 dependencies"
      $(GetPython2.pythonLocation)/python -m pip install setuptools wheel
      $(GetPython2.pythonLocation)/python -m pip install $(pythonDependencies)

# Download the JDK
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: 'curl --silent --remote-name $(openJdkUrl)$(jdkName)'
    workingDirectory: '$(Build.BinariesDirectory)'
  displayName: Download OpenJDK

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: |
      $(Build.BinariesDirectory)/*.zip
      $(Build.BinariesDirectory)/*.tar.gz
    destinationFolder: $(Build.BinariesDirectory)/java
    cleanDestinationFolder: true

- task: Gradle@2
  inputs:
    gradleWrapperFile: ./$(gradleWrapper)
    options: "'-POSPREY_PYTHON3=$(GetPython3.pythonLocation)/python' '-POSPREY_PYTHON2=$(GetPython2.pythonLocation)/python' '-PAZURE_BUILD_ID=$(Build.BuildId)'"
    tasks: 'assemble'
    publishJUnitResults: false
    javaHomeOption: 'Path'
    jdkDirectory: $(javaHome)
    sonarQubeRunAnalysis: false

- task: CopyFiles@2
  inputs:
    SourceFolder: 'build/distributions'
    Contents: |
      *.zip
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
  displayName: Copy distributions to staging dir

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: $(Agent.OS)
    publishLocation: 'Container'
  displayName: Make staging dir an artifact